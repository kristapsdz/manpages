<?xml version="1.0" encoding="UTF-8"?>
<html>
	<head>
		<meta http-equiv="Content-Type" content="text/xml; charset=utf-8"/>
		<title>Optional Sections</title>
		<link rel="stylesheet" href="css/book.css" type="text/css"/>
	</head>
	<body>
		<h3>
			Optional Sections
		</h3>
		<p>
			As discussed previously, a section is begun by the <a href="macros.xml#macro_sh" class="macro">Sh</a> macro and
			continues until the end of file or another section.
		</p>
		<div class="mdocsyntax">
			.<a href="macros.xml#macro_sh" class="macro">Sh</a> <span class="macroarg">SECTION NAME</span>
			<br />
			Text and macros within the section.
		</div>
		<p>
			What follows is a description of each optional section.  An optional section is not required for a well-formed manual,
			but may be necessary for a manual of a given type.  For example, the <span class="sec">EXIT STATUS</span> section is not
			required, but is necessary for utilities.
		</p>
		<h4>
			IMPLEMENTATION NOTES
		</h4>
		<p>
			For components describing an algorithm, or implementing a generic interface, it's at time useful to document the
			implementation itself.  As this is not relevant to the calling syntax or description of a component, this is relegated
			to the <span class="sec">IMPLEMENTATION NOTES</span> section.
		</p>
		<p>
			Consider a simple sorting function, <span class="func">mysort</span>.
		</p>
		<div class="mdocin">
			.Sh SYNOPSIS
			<br />
			.In mysort.h
			<br />
			.Ft void
			<br />
			.Fn mysort "int *input"
			<br />
			.Sh DESCRIPTION
			<br />
			The
			<br />
			.Fn mysort
			<br />
			function in-place sorts an integer array
			<br />
			.Fa input .
			<br />
			.Sh IMPLEMENTATION NOTES
			<br />
			The
			<br />
			.Fn mysort
			<br />
			function uses a bubble-sort algorithm for sorting and thus operates in
			<br />
			O(n^2) time with respect to input size.
			<br />
			Since swapping is in-place, a constant number of allocations occur.
		</div>
		<p>
			In general, <span class="sec">IMPLEMENTATION NOTES</span> is not used, and is thus rarely found in UNIX manuals. 
		</p>
		<h4>
			RETURN VALUES
		</h4>
		<p>
			Manuals describing functions (categories <span class="cat">2</span>, <span class="cat">3</span>, and <span
				class="cat">9</span>) must use the <span class="sec">RETURN VALUES</span> section to document each function's
			return value.  If a manual documents functions in a language without return values, or functions do not return a value,
			they need not use this section.
		</p>
		<p>
			System calls (category <span class="cat">2</span>) usually employ the <a href="macros.xml#macro_rv"
				class="macro">Rv</a> macro to stipulate a standard return value statement.
		</p>
		<div class="mdocin">
			.Sh RETURN VALUES
			<br />
			.Rv -std
		</div>
		<p>
			Note that the <span class="macroflag">std</span> flag is a required argument to <a href="macros.xml#macro_rv"
				class="macro">Rv</a>, for historical reasons.
		</p>
		<p>
			For non-system functions, be as brief as possible.
		</p>
		<div class="mdocin">
			.Sh RETURN VALUES
			<br />
			The
			<br />
			.Fn hello
			<br />
			function returns zero on success and non-zero on failure.
		</div>
		<h4>
			ENVIRONMENT
		</h4>
		<p>
			Both commands and functions may be affected by UNIX environmental variables.  These must be documented in the <span
				class="sec">ENVIRONMENT</span> section of the manual.  Each variable should be listed as a <a
				href="macros.xml#macro_ev" class="macro">Ev</a> along with its effect on the component.
		</p>
		<div class="mdocin">
			.Sh ENVIRONMENT
			<br />
			.Bl -tag -width Ds
			<br />
			.It Ev TZ
			<br />
			The time zone for when displaying dates.
			<br />
			.El
		</div>
		<p>
			Some historical manuals use <span class="sec">ENVIRONMENT VARIABLES</span> instead of <span
				class="sec">ENVIRONMENT</span>.
		</p>
		<h4>
			FILES
		</h4>
		<p>
			Both commands and functions may also be affected by files, although this is mainly the purview of commands.  These files
			should be listed in the <span class="sec">FILES</span> section in a tagged list.
		</p>
		<div class="mdocin">
			.Sh FILES
			<br />
			.Bl -tag -width Ds
			<br />
			.It Pa ~/.profile
			<br />
			User's login profile.
			<br />
			.El
		</div>
		<h4>
			EXIT STATUS
		</h4>
		<p>
			This section is the dual of <span class="sec">RETURN VALUES</span> for commands in categories <span
				class="cat">1</span>, <span class="cat">6</span>, and <span class="cat">8</span>.  It documents the exit status
			of commands.  
		</p>
		<p>
			If your utility exits with zero on success and greater than zero on failure (the standard for most utilities), use the
			<a href="macros.xml#macro_ex" class="macro">Ex</a> macro.
		</p>
		<div class="mdocin">
			.Sh EXIT STATUS
			<br />
			.Ex -std
		</div>
		<p>
			More complex commands should document all possible exit status.
		</p>
		<h4>
			EXAMPLES
		</h4>
		<p>
			In many situations of casual use, the <span class="sec">EXAMPLES</span> section is the first visited in a manual.  It
			should consist of concise, documented examples of the most common uses of your component.  
		</p>
		<p>
			For commands, the <span class="sec">EXAMPLES</span> section should contain a handful of common use cases.  In general,
			these should consist of standalone invocations and, if the input and output correspond to other utilities, invocations
			as part of a pipeline.
		</p>
		<p>
			Although the <span class="cmd">hello</span> example is almost too trivial for documentation, consider if it were used to
			greet new users to a Unix system.  Thus, a common example would be the following:
		</p>
		<div class="mdocin">
			.Sh EXAMPLES
			<br />
			The following sends a greeting message to the new user
			<br />
			.Qq joe .
			<br />
			.Pp
			<br />
			.Dl $ hello \(dqDear Joe, \(dq \(bv mail -s \(dqHi!\(dq joe
		</div>
		<p>
			The <a href="macros.xml#macro_dl" class="macro">Dl</a>, used for one-line literal displays, is a common macro in the
			<span class="sec">EXAMPLES</span> section.  For multi-line displays, use the <a href="macros.xml#macro_bd"
				class="macro">Bd</a> <span class="macroflag">literal</span> environment, usually with a default indentation with
			<span class="macroflag">offset</span> <span class="macroarg">indent</span>.
		</p>
		<div class="mdocin">
			.Sh EXAMPLES
			<br />
			The following sends a greeting message to the new user
			<br />
			.Qq joe .
			<br />
			.Bd -literal -offset indent
			<br />
			$ hello \(dqDear Joe, \(dq \(bv \e
			<br />
			&nbsp;&nbsp;mail -s \(dqHi!\(dq joe
			<br />
			.Ed
		</div>
		<p>
			For functions and function libraries, it's more common to include a single, thorough source example than individual
			examples for each function.  These always use the <a href="macros.xml#macro_bd" class="macro">Bd</a> <span
				class="macroflag">literal</span> display environment and an indentation.
		</p>
		<div class="mdocin">
			.Sh EXAMPLES
			<br />
			The following is a simple utility interfacing with the
			<br />
			.Nm
			<br />
			library:
			<br />
			.Bd -literal -offset indent
			<br />
			#include &lt;stdlib.h&gt;
			<br />
			#include "hello.h"
			<br />
			&nbsp;
			<br />
			int
			<br />
			main(int argc, char *argv[]) {
			<br />
			&nbsp;&nbsp;hello(0, argc &gt; r ? argv[1] : NULL);
			<br />
			&nbsp;&nbsp;return(EXIT_SUCCESS);
			<br />
			}
			<br />
			.Ed
		</div>
		<p>
			Use terse syntax for your example, without error checking for functions not being documented, e.g., <span
				class="func">open</span> or <span class="func">scanf</span>.
		</p>
		<p>
			Some manuals will use the <span class="screen">vS</span> and <span class="screen">vE</span> macros around source code.
			These are not <span class="lang">mdoc</span> and should be avoided in portable manuals.
		</p>
		<h4>
			DIAGNOSTICS
		</h4>
		<p>
			If your component emits regular debug, status, error, or warning messages, document the syntax of these messages in
			<span class="sec">DIAGNOSTICS</span>.
		</p>
		<p>
			Some historic manuals document function return values in this section, but modern practise is to do in <span
				class="sec">RETURN VALUES</span> or, if setting the error constant of the C library, <span
				class="sec">ERRORS</span>.
		</p>
		<p>
			The <a href="macros.xml#macro_bl" class="macro">Bl</a> <span class="macroflag">diag</span> lists are most often used
			for documenting emitted messages.
		</p>
		<div class="mdocin">
			.Sh DIAGNOSTICS
			<br />
			.Bl -diag
			<br />
			.It "%file:%line:%col: %msg[: %extra]"
			<br />
			An error occurred when processing
			<br />
			.Cm %file
			<br />
			at line and column
			<br />
			.Cm %line
			<br />
			and
			<br />
			.Cm %col ,
			<br />
			respectively.
			<br />
			The error message
			<br />
			.Cm %msg
			<br />
			may be followed by additional debugging information in
			<br />
			.Cm %extra .
			<br />
			.El
		</div>
		<h4>
			ERRORS
		</h4>
		<p>
			This section is used exclusively by functions that set or return a regular error code.  The most common use is for
			system calls (category two) setting error constants in the C library.  In either case, this section should consist of a
			single list documenting all possible error codes.  In the latter case, each error should be labelled within the <a
				href="macros.xml#macro_er" class="macro">Er</a> macro.
		</p>
		<h4>
			SEE ALSO
		</h4>
		<p>
			This section consists of cross-references to other manuals or literature.  It is a standard section in most UNIX
			manuals.  Any components referenced in your manual should be duplicated here along with any other bibliographic texts.
		</p>
		<p>
			For UNIX manual cross-references, use the <a href="macros.xml#macro_xr" class="macro">Xr</a> macro.  These should be
			specified in a list ordered first by section, then by name.  Non-terminal references should be comma-separated.
		</p>
		<div class="mdocin">
			.Sh SEE ALSO
			<br />
			.Xr mandoc 1 ,
			<br />
			.Xr mandoc 3 ,
			<br />
			.Xr man 7 ,
			<br />
			.Xr mdoc 7
		</div>
		<p>
			If your manual references other documents or literature, you may include them in this section within a bibliographic
			reference as well.  The <a href="macros.xml#macro_rs" class="macro">Rs</a> block is used for bibliographic references.
			These should be specified after any UNIX manual cross-references.
		</p>
		<div class="mdocin">
			.Sh SEE ALSO
			<br />
			.Xr mandoc 1 ,
			<br />
			.Xr mandoc 3 ,
			<br />
			.Xr man 7 ,
			<br />
			.Xr mdoc 7
			<br />
			.Rs
			<br />
			.%A Brian W. Kernighan
			<br />
			.%A Lorinda L. Cherry
			<br />
			.%T System for Typesetting Mathematics
			<br />
			.%J Communications of the ACM
			<br />
			.%V 18
			<br />
			.%P 151\(en157
			<br />
			.%D March, 1975
			<br />
			.Re
		</div>
		<p>
			Bibliographic references should be ordered by document title.  Advanced references will be covered later in this book.
		</p>
		<h4>
			STANDARDS
		</h4>
		<p>
			If your component references any standards literature, it should be mentioned here.  Most standards (e.g., POSIX, ANSI,
			etc.) may be semantically noted with the <a href="macros.xml#macro_st" class="macro">St</a> macro.  When implementing
			standardised wire protocols, references to RFC and other literature should also be mentioned here.  These differ from
			referenced standards in terms of being implemented versus referred.
		</p>
		<div class="mdocin">
			.Sh STANDARDS
			<br />
			The
			<br />
			.Nm
			<br />
			utility is compliant with the
			<br />
			.St -xpg4
			<br />
			specification.
		</div>
		<p>
			If your component consists of deviations from a given standard, they should be mentioned in this section as well.  Some
			historic manuals use a special <span class="sec">COMPATIBILITY</span> section for this, but this is discouraged unless
			when discussing compatibility with non-standard but common utilities.
		</p>
		<p>
			This section has also been referred to as <span class="sec">CONFORMING TO</span> on some GNU/Linux manuals.
		</p>
		<h4>
			HISTORY
		</h4>
		<p>
			Some components have a historical basis: this should be included here.  Keep this information terse and, above all,
			correct.
		</p>
		<p>
			If your manual includes prior implementations of your component, for example, it's common to include the dates and
			developers of those prior implementations.
		</p>
		<h4>
			AUTHORS
		</h4>
		<p>
			Another standard section for UNIX manuals is the <span class="sec">AUTHORS</span> section, which should always mention
			the current contact for the utility.  The traditional text for this section is as follows.
		</p>
		<div class="mdocin">
			.Sh AUTHORS
			<br />
			The
			<br />
			.Nm
			<br />
			reference was written by
			<br />
			.An Joe Foo Aq joe@example.com .
		</div>
		<p>
			However, in as e-mail addresses are a ubiquitous form of contact, it's considered good practise to use the correct
			semantic notation.
		</p>
		<div class="mdocin">
			.Sh AUTHORS
			<br />
			The
			<br />
			.Nm
			<br />
			reference was written by
			<br />
			.An Joe Foo ,
			<br />
			.Mt joe@example.com .
		</div>
		<p>
			The term <span class="screen">reference</span> in this fragment should reflect the content of the manual.
		</p>
		<h4>
			CAVEATS
		</h4>
		<p>
			The <span class="sec">CAVEATS</span> section is not often used.  It consists of text relevant to unexpected (but
			unchangeable) behaviour of the component.
		</p>
		<h4>
			BUGS
		</h4>
		<p>
			If the component has known bugs, they should be listed here.  In some historic manuals, authors used this section to
			list <q>no bugs present</q>; however, this text can be misleading for machine-readers of manuals and should be avoided
			in new manuals.
		</p>
		<h4>
			SECURITY CONSIDERATIONS
		</h4>
		<p>
			The <span class="sec">SECURITY CONSIDERATIONS</span> section is reserved for components whose deployment may be
			sensitive to security conditions, such as network daemons.  It should include suggestions on security measures beyond
			the scope of the component.
		</p>
		<p>
			This section was historically called <span class="sec">SECURITY</span>.
		</p>
		<table class="nav">
			<tbody>
				<tr>
					<td class="nav-contents"><a href="toc.xml">Contents</a></td>
					<td class="nav-next"><a href="part3.xml">Next</a></td>
					<td class="nav-home"><a href="http://manpages.bsd.lv/index.html">Home</a></td>
					<td class="nav-history"><a href="http://manpages.bsd.lv/cgi-bin/cvsweb/part2-3-2.xml?cvsroot=manpages">History</a></td>
				</tr>
			</tbody>
		</table>
		<p class="edits">
			Last edited by $Author$ on $Date$.  Copyright &copy; 2011, Kristaps Dzonsons.  CC BY-SA.
		</p>
	</body>
</html>
